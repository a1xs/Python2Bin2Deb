image: ubuntu:20.04

variables:
  PACKAGE: example-pkg
  NAME: example

stages:
  - build
  - release

build:
  stage: build
  before_script:
    - apt update -y
    - apt install git -y && apt install python3.8 -y && apt install -y python3-pip -y && pip install --user pyinstaller
    - chmod -R 755 $PACKAGE
    - export PATH=$PATH:/root/.local/bin
  script:
    - pip install --user -r requirements.txt
    - pyinstaller -D -F -n main -c "main.py" --collect-submodules kombu
    - du -hs ./dist/
  rules:
    - if: $CI_COMMIT_TAG =~ /^(\d+\.)?(\d+\.)?(\*|\d+)$/
    - when: never
  artifacts:
    paths:
      - dist/
    expire_in: 1h

release:
  stage: release
  before_script:
    - apt update -y
    - chmod -R 755 $PACKAGE
    - export PATH=$PATH:/root/.local/bin && export PACKAGE_VERSION=$CI_COMMIT_TAG && export BUILDTIME=$(date +"%s")
    - cp -R ./dist/main $PACKAGE/opt/$NAME-service/$NAME
    - "echo Package: $PACKAGE >> $PACKAGE/DEBIAN/control"
    - "echo Version: $PACKAGE_VERSION >> $PACKAGE/DEBIAN/control"
    - "echo >> $PACKAGE/DEBIAN/control"
    - cat $PACKAGE/DEBIAN/control

  script:
      - dpkg-deb --build $PACKAGE
      - mkdir -p releases
      - mv $PACKAGE.deb releases/$PACKAGE-$PACKAGE_VERSION-$BUILDTIME-all.deb
      - du -hs ./releases
  rules:
    - if: $CI_COMMIT_TAG =~ /^(\d+\.)?(\d+\.)?(\*|\d+)$/
    - when: never
  artifacts:
    paths:
      - releases/
    expire_in: 2h
